üìä Orders by Weekday
This query calculates the number of unique orders (order_id) for each day of the week. It is useful for identifying which weekdays are the busiest for pizza orders.

Since the order_date column is stored as VARCHAR, we first convert it to a proper DATE format using TRY_CONVERT with style 103 (dd/MM/yyyy). Then, we extract the weekday name using DATENAME.

--Orders per weekday:
SELECT 
    DATENAME(WEEKDAY, TRY_CONVERT(DATE, order_date, 103)) AS weekday,
    COUNT(DISTINCT order_id) AS order_per_day
FROM pizza_sales
GROUP BY DATENAME(WEEKDAY, TRY_CONVERT(DATE, order_date, 103));

üìä Orders by Month
This query returns the number of unique orders (order_id) for each month based on the order_date field. It helps identify which months had the highest order volume.

--Orders per month:
SELECT 
    DATENAME(MONTH, TRY_CONVERT(DATE, order_date, 103)) AS month,
    COUNT(DISTINCT order_id) AS order_per_month
FROM pizza_sales
GROUP BY DATENAME(MONTH, TRY_CONVERT(DATE, order_date, 103))
ORDER BY order_per_month DESC;

üìä Percentage of Total Sales by Pizza Category
This query calculates the percentage contribution of each pizza category to the total sales revenue.

The calculation is done by summing the total_price for each pizza_category, dividing it by the total sales across all categories, and multiplying by 100 to get the percentage.

--Percent of total sales by pizza category:
SELECT 
	pizza_category,
	CAST(SUM(total_price) * 100 / (SELECT SUM(total_price) FROM pizza_sales) AS DECIMAL(10,2)) AS percent_tot_sales
FROM pizza_sales
GROUP BY pizza_category 
ORDER BY percent_tot_sales;

üìä Percentage of Total Sales by Pizza Size
This query calculates the percentage contribution of each pizza size to the overall sales revenue.

For each pizza_size, it sums the total_price, divides it by the total sales across all sizes, and multiplies by 100 to express the result as a percentage.

--Percent of total sales by pizza size:
SELECT 
    pizza_size,
    CAST(SUM(total_price) * 100 / (SELECT SUM(total_price) FROM pizza_sales) AS DECIMAL(10,2)) AS percent_tot_sales
FROM pizza_sales
GROUP BY pizza_size
ORDER BY percent_tot_sales DESC;

üí∞ Top 5 Best-Selling Pizzas by Revenue
This query identifies the top 5 pizzas that generated the highest total revenue.

It groups the data by pizza_name_id, calculates the total revenue (SUM(total_price)), and then orders the results in descending order to show the pizzas with the highest sales. The TOP 5 keyword limits the output to the five best performers.

--Top 5 pizzas by revenue:
SELECT TOP 5
    pizza_name_id,
    SUM(total_price) AS total_revenue
FROM pizza_sales
GROUP BY pizza_name_id
ORDER BY total_revenue DESC;

üí∏ Bottom 5 Pizzas by Revenue
This query identifies the five pizzas that generated the lowest total revenue.

It groups the data by pizza_name_id, calculates the total revenue (SUM(total_price)), and then orders the results in ascending order to show the least profitable pizzas. The TOP 5 clause limits the output to the bottom five.

--Bottom 5 pizzas by revenue:
SELECT TOP 5
    pizza_name_id,
    SUM(total_price) AS total_revenue
FROM pizza_sales
GROUP BY pizza_name_id
ORDER BY total_revenue ASC;

üçï Top 5 Most Sold Pizzas by Quantity
This query identifies the five pizzas that were ordered the most, based on total quantity sold.

It groups the data by pizza_name_id, sums the quantity field, and then orders the results in descending order to highlight the most frequently sold pizzas.

--Top 5 pizzas by quantity:
SELECT TOP 5
    pizza_name_id,
    SUM(quantity) AS total_quantity
FROM pizza_sales
GROUP BY pizza_name_id
ORDER BY total_quantity DESC;

üçï Bottom 5 Least Sold Pizzas by Quantity
This query identifies the five pizzas with the lowest total quantity sold.

It groups the data by pizza_name_id, sums the quantity, and then sorts the results in ascending order to show the least popular pizzas.

--Bottom 5 pizzas by quantity:
SELECT TOP 5
    pizza_name_id,
    SUM(quantity) AS total_quantity
FROM pizza_sales
GROUP BY pizza_name_id
ORDER BY total_quantity ASC;

üì¶ Top 5 Most Ordered Pizzas by Number of Orders
This query identifies the five pizzas that appeared in the highest number of distinct orders, based on order_id.

It groups the data by pizza_name_id, counts the number of unique orders each pizza was included in, and orders the results in descending order to highlight the most frequently ordered pizzas.

--Top 5 pizzas by number of orders:
SELECT TOP 5
    pizza_name_id,
    COUNT(DISTINCT order_id) AS total_orders
FROM pizza_sales
GROUP BY pizza_name_id
ORDER BY total_orders DESC;

üì¶ Bottom 5 Least Ordered Pizzas by Number of Orders
This query identifies the five pizzas that appeared in the fewest number of distinct orders.

It groups the data by pizza_name_id, counts unique order_ids, and orders the result in ascending order to highlight the least ordered pizzas.

--Bottom 5 pizzas by number of orders:
SELECT TOP 5
    pizza_name_id,
    COUNT(DISTINCT order_id) AS total_orders
FROM pizza_sales
GROUP BY pizza_name_id
ORDER BY total_orders ASC;

